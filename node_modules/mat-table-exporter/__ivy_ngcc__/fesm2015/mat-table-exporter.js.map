{"version":3,"file":"mat-table-exporter.js","sources":["mat-table-exporter/lib/mat-table-exporter.directive.ts","mat-table-exporter/lib/mat-table-exporter.module.ts","mat-table-exporter/public-api.ts","mat-table-exporter/mat-table-exporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Directive, Host, Optional, Renderer2, Self } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { CdkTableExporter, DataExtractorService, ServiceLocatorService } from 'cdk-table-exporter';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[matTableExporter]',\r\n  exportAs: 'matTableExporter'\r\n})\r\nexport class MatTableExporterDirective extends CdkTableExporter implements AfterViewInit {\r\n  /**\r\n   * Overriding ngAfterViewInit of TableExporter\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.exportStarted.subscribe(_ => {\r\n      this.enablePaginator(false);\r\n    });\r\n    this.exportCompleted.subscribe(_ => {\r\n      this.enablePaginator(true);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    renderer: Renderer2,\r\n    serviceLocator: ServiceLocatorService,\r\n    dataExtractor: DataExtractorService,\r\n    @Host() @Self() @Optional() table: MatTable<any>\r\n  ) {\r\n    super(renderer, serviceLocator, dataExtractor, table);\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getPageCount\r\n   */\r\n  public getPageCount(): number {\r\n    return this.getPaginator().getNumberOfPages();\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getPageSize\r\n   */\r\n  public getPageSize(): number {\r\n    return this.getPaginator()?.pageSize ?? 0;\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getCurrentPageIndex\r\n   */\r\n  public getCurrentPageIndex(): number {\r\n    return this.getPaginator()?.pageIndex ?? 0;\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getTotalItemsCount\r\n   */\r\n  public getTotalItemsCount(): number {\r\n    return this.getPaginator()?.length ?? this.getDataSource()?.data?.length ?? 0;\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of goToPage\r\n   */\r\n  public goToPage(index: number): void {\r\n    this.getPaginator().pageIndex = index;\r\n    this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n  }\r\n\r\n  /**\r\n   * MatTable implementation of getPageChangeObservable\r\n   */\r\n  public getPageChangeObservable(): Observable<any> {\r\n    return this.getPaginator().page;\r\n  }\r\n\r\n  private getDataSource(): MatTableDataSource<any> {\r\n    return this._cdkTable.dataSource as MatTableDataSource<any>;\r\n  }\r\n\r\n  private getPaginator(): MatPaginator {\r\n    return this.getDataSource().paginator;\r\n  }\r\n\r\n  private enablePaginator(value: boolean) {\r\n    if (this.getPaginator()) {\r\n      this.getPaginator().disabled = !value;\r\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\r\n    }\r\n  }\r\n\r\n}\r\n","import { CdkTableExporterModule } from 'cdk-table-exporter';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTableExporterDirective } from './mat-table-exporter.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MatTableExporterDirective],\r\n  imports: [\r\n    MatTableModule,\r\n    CdkTableExporterModule\r\n  ],\r\n  exports: [MatTableExporterDirective]\r\n})\r\nexport class MatTableExporterModule { }\r\n","\r\n/*\r\n * Public API Surface of mat-table-exporter\r\n */\r\n\r\nexport * from './lib/mat-table-exporter.module';\r\nexport { MatTableExporterDirective } from './lib/mat-table-exporter.directive';\r\nexport * from 'cdk-table-exporter';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}